# Reference lines
geom_vline(xintercept = -1, linetype = "dashed", colour = "blue") +
geom_hline(yintercept = 0, linetype = "dashed", colour = "purple") +
# Labels and scales
labs(x = 'Time from Treatment (years)', y = 'Effect on Fires (1,000 units)') +
scale_x_continuous(breaks = seq(-8, 6, by = 1)) +
# Theme
theme(
panel.background  = element_rect(fill = "white", colour = NA),
plot.background   = element_rect(fill = "white", colour = NA),
panel.grid.minor  = element_blank(),
axis.line         = element_line(colour = "black"),
axis.line.x.top   = element_blank(),
axis.line.y.right = element_blank(),
panel.grid.major   = element_line(colour = "gray70", linetype = "dashed"),
legend.position   = "none"
) +
annotate("text",
x = -Inf, y = Inf,
hjust = -0.1, vjust = 1.1,
label = ann,
size  = 4)
p1
p1 <- ggplot(ev, aes(x = t, y = est)) +
# Ribbon for CI
geom_ribbon(aes(ymin = lb, ymax = ub), fill = "#279FF5", alpha = 0.2) +
# Line and points
geom_line(color = "#279FF5", linewidth = 0.8) +
geom_point(shape = 15, size = 2.2, color = "#279FF5") +
# Reference lines
geom_vline(xintercept = -1, linetype = "dashed", colour = "blue") +
geom_hline(yintercept = 0, linetype = "dashed", colour = "purple") +
# Labels and scales
labs(x = 'Election from Treatment', y = '') +
scale_x_continuous(breaks = seq(-8, 6, by = 1)) +
# Theme
theme(
panel.background  = element_rect(fill = "white", colour = NA),
plot.background   = element_rect(fill = "white", colour = NA),
panel.grid.minor  = element_blank(),
axis.line         = element_line(colour = "black"),
axis.line.x.top   = element_blank(),
axis.line.y.right = element_blank(),
panel.grid.major   = element_line(colour = "gray70", linetype = "dashed"),
legend.position   = "none"
) +
annotate("text",
x = -Inf, y = Inf,
hjust = -0.1, vjust = 1.1,
label = ann,
size  = 4)
p1
ev$tfake <- ev$t+1
fit_pre <- lm(est ~ tfake -1, data = ev[tfake <= 0,])
ev$pr_tr <- 0
ev$pr_tr <- predict(fit_pre, newdata = ev)
ev$res_b <- ev$est - ev$pr_tr
ev <- ev %>%
mutate(
lb = res_b - 1.96 * se,
ub = res_b + 1.96 * se
)
ev$res_b
beta <- c(ev$res_b[1:3],ev$res_b[4] )
beta <- c(ev$res_b[1:3],ev$res_b[4] )
out.pre <- mean_coef_test(beta, V, subset= c(1:3))
pre.coef <- round(out.pre$estimate,3)
pre.se <- round(out.pre$se,3)
out.post <- mean_coef_test(beta, V, subset= c(4))
post.coef <- round(out.post$estimate,3)
post.se <- round(out.post$se,3)
pp2 <- list(
pre  = paste0(pre.coef, " (", pre.se, ")"),
post = paste0(post.coef, " (", post.se, ")")
)
# 7) annotation  text
ann <- paste0( " Mean DV = ",    round(y0,   3), "\n",
"Pre Avg =  ", pp2$pre,        "\n",
"Post Avg = ", pp2$post,       "\n"
)
out[['beta_rot']] <- beta
p2 <- ggplot(ev, aes(x = t, y = res_b)) +
# Ribbon for CI
geom_ribbon(aes(ymin = lb, ymax = ub), fill = "#279FF5", alpha = 0.2) +
# Line and points
geom_line(color = "#279FF5", linewidth = 0.8) +
geom_point(shape = 15, size = 2.2, color = "#279FF5") +
# Reference lines
geom_vline(xintercept = -1, linetype = "dashed", colour = "blue") +
geom_hline(yintercept = 0, linetype = "dashed", colour = "purple") +
# Labels and scales
labs(x = 'Election from Treatment', y = '') +
scale_x_continuous(breaks = seq(-8, 6, by = 1)) +
# Theme
theme(
panel.background  = element_rect(fill = "white", colour = NA),
plot.background   = element_rect(fill = "white", colour = NA),
panel.grid.minor  = element_blank(),
axis.line         = element_line(colour = "black"),
axis.line.x.top   = element_blank(),
axis.line.y.right = element_blank(),
panel.grid.major   = element_line(colour = "gray70", linetype = "dashed"),
legend.position   = "none"
) +
annotate("text",
x = -Inf, y = Inf,
hjust = -0.1, vjust = 1.1,
label = ann,
size  = 4)
p2
beta <- c(ev$res_b[1:3],ev$res_b[5] )
out.pre <- mean_coef_test(beta, V, subset= c(1:3))
pre.coef <- round(out.pre$estimate,3)
pre.se <- round(out.pre$se,3)
out.post <- mean_coef_test(beta, V, subset= c(4))
post.coef <- round(out.post$estimate,3)
post.se <- round(out.post$se,3)
pp2 <- list(
pre  = paste0(pre.coef, " (", pre.se, ")"),
post = paste0(post.coef, " (", post.se, ")")
)
# 7) annotation  text
ann <- paste0( " Mean DV = ",    round(y0,   3), "\n",
"Pre Avg =  ", pp2$pre,        "\n",
"Post Avg = ", pp2$post,       "\n"
)
out[['beta_rot']] <- beta
p2 <- ggplot(ev, aes(x = t, y = res_b)) +
# Ribbon for CI
geom_ribbon(aes(ymin = lb, ymax = ub), fill = "#279FF5", alpha = 0.2) +
# Line and points
geom_line(color = "#279FF5", linewidth = 0.8) +
geom_point(shape = 15, size = 2.2, color = "#279FF5") +
# Reference lines
geom_vline(xintercept = -1, linetype = "dashed", colour = "blue") +
geom_hline(yintercept = 0, linetype = "dashed", colour = "purple") +
# Labels and scales
labs(x = 'Election from Treatment', y = '') +
scale_x_continuous(breaks = seq(-8, 6, by = 1)) +
# Theme
theme(
panel.background  = element_rect(fill = "white", colour = NA),
plot.background   = element_rect(fill = "white", colour = NA),
panel.grid.minor  = element_blank(),
axis.line         = element_line(colour = "black"),
axis.line.x.top   = element_blank(),
axis.line.y.right = element_blank(),
panel.grid.major   = element_line(colour = "gray70", linetype = "dashed"),
legend.position   = "none"
) +
annotate("text",
x = -Inf, y = Inf,
hjust = -0.1, vjust = 1.1,
label = ann,
size  = 4)
p2
################################################################################
rm(list = ls())
library(data.table)
# library(doParallel)
# library(panelView)
library(fixest)
# library(did)
# library(DIDmultiplegtDYN)
library(dplyr)
# library(gridExtra)
# library(ggplotify)
library(ggplot2)
# library(grid)
# library(ggfixest)
# library(haven)
# library(collapse)
# library(marginaleffects)
# library(data.table)
# library(ggplot2)
# library(broom)
# library(fixest)
# library(fixest)
# library(ggplot2)
# library(did)
# library(xtable)
# library(ggfixest)
# library(patchwork) # for wrap_plots()
# library(gridExtra)
################################################################################
# pacman::p_load(tidyverse, ggthemes, rio,
#                geomtextpath, gghighlight, data.table,
#                collapse, fixest, modelsummary)
################################################################################
####################### Setting working directory ##############################
dbox_root <- 'C:/Users/187697/Dropbox/sa_fires'
shell_root <- '/groups/sgulzar/sa_fires'
root <- dbox_root
int_farms <- file.path( root, 'proj_bureaucrats_farms/data_output/intermediate')
table_farms <- file.path(root, 'proj_bureaucrats_farms/tex/paper/tables')
figure_farms <- file.path(root, 'proj_bureaucrats_farms/tex/paper/figures')
# source('/groups/sgulzar/india_forest_land/C_Programs/utils.R')
################################################################################
mean_coef_test <- function(betahat, V, subset = NULL, df = 100, level = 0.95) {
if (!is.null(subset)) {
betahat <- betahat[subset]
V <- V[subset, subset, drop = FALSE]
}
k <- length(betahat)
w <- rep(1/k, k)                       # equal weights for the mean
est <- as.numeric(crossprod(w, betahat))
se  <- as.numeric(sqrt(t(w) %*% V %*% w))
t   <- est / se
crit <- if (is.null(df)) qnorm(1 - (1 - level)/2) else qt(1 - (1 - level)/2, df)
p   <- if (is.null(df)) 2*pnorm(-abs(t)) else 2*pt(-abs(t), df)
list(estimate = est, se = se, t = t, p = p,
ci = c(est - crit*se, est + crit*se))
}
for (checkval in 1:24){
file_base <- paste0("pr_on_polchar_spec", checkval)
ev <- fread(file.path(int_farms, "protest_on_elections.csv"))[reg == paste0("evreg_", checkval),c(3, 16, 17, 18, 20, 21)]
ev <- ev[c(13:15, 17),]
y0 <- mean(ev$ymean)
V <- as.matrix(ev[,2:5])
beta <- ev$beta
out <- list(beta = beta, sigma = V )
ev$se <- sqrt(diag(as.matrix(ev[,2:5])))
ev$term <- c( -4, -3, -2, 0)
ev$t <- ev$term
ev$est <- ev$beta
ev <- ev %>% bind_rows(tibble(t = -1L, est = 0, se = 0)) %>%  # add row of zeros
arrange(t) %>% as.data.table() %>%
mutate(
lb = est - 1.96 * se,
ub = est + 1.96 * se
)
out.pre <- mean_coef_test(beta, V, subset= c(1:3))
pre.coef <- round(out.pre$estimate,3)
pre.se <- round(out.pre$se,3)
out.post <- mean_coef_test(beta, V, subset= c(4))
post.coef <- round(out.post$estimate,3)
post.se <- round(out.post$se,3)
pp2 <- list(
pre  = paste0(pre.coef, " (", pre.se, ")"),
post = paste0(post.coef, " (", post.se, ")")
)
# 7) annotation  text
ann <- paste0( " Mean DV = ",    round(y0,   3), "\n",
"Pre Avg =  ", pp2$pre,        "\n",
"Post Avg = ", pp2$post,       "\n"
)
p1 <- ggplot(ev, aes(x = t, y = est)) +
# Ribbon for CI
geom_ribbon(aes(ymin = lb, ymax = ub), fill = "#279FF5", alpha = 0.2) +
# Line and points
geom_line(color = "#279FF5", linewidth = 0.8) +
geom_point(shape = 15, size = 2.2, color = "#279FF5") +
# Reference lines
geom_vline(xintercept = -1, linetype = "dashed", colour = "blue") +
geom_hline(yintercept = 0, linetype = "dashed", colour = "purple") +
# Labels and scales
labs(x = 'Election from Treatment', y = '') +
scale_x_continuous(breaks = seq(-8, 6, by = 1)) +
# Theme
theme(
panel.background  = element_rect(fill = "white", colour = NA),
plot.background   = element_rect(fill = "white", colour = NA),
panel.grid.minor  = element_blank(),
axis.line         = element_line(colour = "black"),
axis.line.x.top   = element_blank(),
axis.line.y.right = element_blank(),
panel.grid.major   = element_line(colour = "gray70", linetype = "dashed"),
legend.position   = "none"
) +
annotate("text",
x = -Inf, y = Inf,
hjust = -0.1, vjust = 1.1,
label = ann,
size  = 4)
save_path <- file.path(figure_farms, paste0(file_base, "_ori.png"))
ggsave(save_path, plot = p1, width = 8, height = 4, dpi = 300)
ev$tfake <- ev$t+1
fit_pre <- lm(est ~ tfake -1, data = ev[tfake <= 0,])
ev$pr_tr <- 0
ev$pr_tr <- predict(fit_pre, newdata = ev)
ev$res_b <- ev$est - ev$pr_tr
ev <- ev %>%
mutate(
lb = res_b - 1.96 * se,
ub = res_b + 1.96 * se
)
beta <- c(ev$res_b[1:3],ev$res_b[5] )
out.pre <- mean_coef_test(beta, V, subset= c(1:3))
pre.coef <- round(out.pre$estimate,3)
pre.se <- round(out.pre$se,3)
out.post <- mean_coef_test(beta, V, subset= c(4))
post.coef <- round(out.post$estimate,3)
post.se <- round(out.post$se,3)
pp2 <- list(
pre  = paste0(pre.coef, " (", pre.se, ")"),
post = paste0(post.coef, " (", post.se, ")")
)
# 7) annotation  text
ann <- paste0( " Mean DV = ",    round(y0,   3), "\n",
"Pre Avg =  ", pp2$pre,        "\n",
"Post Avg = ", pp2$post,       "\n"
)
out[['beta_rot']] <- beta
p2 <- ggplot(ev, aes(x = t, y = res_b)) +
# Ribbon for CI
geom_ribbon(aes(ymin = lb, ymax = ub), fill = "#279FF5", alpha = 0.2) +
# Line and points
geom_line(color = "#279FF5", linewidth = 0.8) +
geom_point(shape = 15, size = 2.2, color = "#279FF5") +
# Reference lines
geom_vline(xintercept = -1, linetype = "dashed", colour = "blue") +
geom_hline(yintercept = 0, linetype = "dashed", colour = "purple") +
# Labels and scales
labs(x = 'Election from Treatment', y = '') +
scale_x_continuous(breaks = seq(-8, 6, by = 1)) +
# Theme
theme(
panel.background  = element_rect(fill = "white", colour = NA),
plot.background   = element_rect(fill = "white", colour = NA),
panel.grid.minor  = element_blank(),
axis.line         = element_line(colour = "black"),
axis.line.x.top   = element_blank(),
axis.line.y.right = element_blank(),
panel.grid.major   = element_line(colour = "gray70", linetype = "dashed"),
legend.position   = "none"
) +
annotate("text",
x = -Inf, y = Inf,
hjust = -0.1, vjust = 1.1,
label = ann,
size  = 4)
save_path <- file.path(figure_farms, paste0(file_base, "_rotated.png"))
ggsave(save_path, plot = p2, width = 8, height = 4, dpi = 300)
}
################################################################################
rm(list = ls())
library(data.table)
# library(doParallel)
# library(panelView)
library(fixest)
# library(did)
# library(DIDmultiplegtDYN)
library(dplyr)
# library(gridExtra)
# library(ggplotify)
library(ggplot2)
# library(grid)
# library(ggfixest)
# library(haven)
# library(collapse)
# library(marginaleffects)
# library(data.table)
# library(ggplot2)
# library(broom)
# library(fixest)
# library(fixest)
# library(ggplot2)
# library(did)
# library(xtable)
# library(ggfixest)
# library(patchwork) # for wrap_plots()
# library(gridExtra)
################################################################################
# pacman::p_load(tidyverse, ggthemes, rio,
#                geomtextpath, gghighlight, data.table,
#                collapse, fixest, modelsummary)
################################################################################
####################### Setting working directory ##############################
dbox_root <- 'C:/Users/187697/Dropbox/sa_fires'
shell_root <- '/groups/sgulzar/sa_fires'
root <- dbox_root
int_farms <- file.path( root, 'proj_bureaucrats_farms/data_output/intermediate')
table_farms <- file.path(root, 'proj_bureaucrats_farms/tex/paper/tables')
figure_farms <- file.path(root, 'proj_bureaucrats_farms/tex/paper/figures')
# source('/groups/sgulzar/india_forest_land/C_Programs/utils.R')
################################################################################
mean_coef_test <- function(betahat, V, subset = NULL, df = 100, level = 0.95) {
if (!is.null(subset)) {
betahat <- betahat[subset]
V <- V[subset, subset, drop = FALSE]
}
k <- length(betahat)
w <- rep(1/k, k)                       # equal weights for the mean
est <- as.numeric(crossprod(w, betahat))
se  <- as.numeric(sqrt(t(w) %*% V %*% w))
t   <- est / se
crit <- if (is.null(df)) qnorm(1 - (1 - level)/2) else qt(1 - (1 - level)/2, df)
p   <- if (is.null(df)) 2*pnorm(-abs(t)) else 2*pt(-abs(t), df)
list(estimate = est, se = se, t = t, p = p,
ci = c(est - crit*se, est + crit*se))
}
for (checkval in 1:24){
file_base <- paste0("pr_on_polchar_spec", checkval)
ev <- fread(file.path(int_farms, "protest_on_elections.csv"))[reg == paste0("evreg_", checkval),c(3, 16, 17, 18, 20, 21)]
ev <- ev[c(13:15, 17),]
y0 <- mean(ev$ymean)
V <- as.matrix(ev[,2:5])
beta <- ev$beta
out <- list(beta = beta, sigma = V )
ev$se <- sqrt(diag(as.matrix(ev[,2:5])))
ev$term <- c( -4, -3, -2, 0)
ev$t <- ev$term
ev$est <- ev$beta
ev <- ev %>% bind_rows(tibble(t = -1L, est = 0, se = 0)) %>%  # add row of zeros
arrange(t) %>% as.data.table() %>%
mutate(
lb = est - 1.96 * se,
ub = est + 1.96 * se
)
out.pre <- mean_coef_test(beta, V, subset= c(1:3))
pre.coef <- round(out.pre$estimate,3)
pre.se <- round(out.pre$se,3)
out.post <- mean_coef_test(beta, V, subset= c(4))
post.coef <- round(out.post$estimate,3)
post.se <- round(out.post$se,3)
pp2 <- list(
pre  = paste0(pre.coef, " (", pre.se, ")"),
post = paste0(post.coef, " (", post.se, ")")
)
# 7) annotation  text
ann <- paste0( " Mean DV = ",    round(y0,   3), "\n",
"Pre Avg =  ", pp2$pre,        "\n",
"Post Avg = ", pp2$post,       "\n"
)
p1 <- ggplot(ev, aes(x = t, y = est)) +
# Ribbon for CI
geom_ribbon(aes(ymin = lb, ymax = ub), fill = "#279FF5", alpha = 0.2) +
# Line and points
geom_line(color = "#279FF5", linewidth = 0.8) +
geom_point(shape = 15, size = 2.2, color = "#279FF5") +
# Reference lines
geom_vline(xintercept = -1, linetype = "dashed", colour = "blue") +
geom_hline(yintercept = 0, linetype = "dashed", colour = "purple") +
# Labels and scales
labs(x = 'Election from Treatment', y = '') +
scale_x_continuous(breaks = seq(-8, 6, by = 1)) +
# Theme
theme(
panel.background  = element_rect(fill = "white", colour = NA),
plot.background   = element_rect(fill = "white", colour = NA),
panel.grid.minor  = element_blank(),
axis.line         = element_line(colour = "black"),
axis.line.x.top   = element_blank(),
axis.line.y.right = element_blank(),
panel.grid.major   = element_line(colour = "gray70", linetype = "dashed"),
legend.position   = "none"
) +
annotate("text",
x = -Inf, y = Inf,
hjust = -0.1, vjust = 1.1,
label = ann,
size  = 4)
save_path <- file.path(figure_farms, paste0(file_base, "_ori.png"))
ggsave(save_path, plot = p1, width = 8, height = 4, dpi = 300)
ev$tfake <- ev$t+1
fit_pre <- lm(est ~ tfake -1, data = ev[tfake <= 0,])
ev$pr_tr <- 0
ev$pr_tr <- predict(fit_pre, newdata = ev)
ev$res_b <- ev$est - ev$pr_tr
ev <- ev %>%
mutate(
lb = res_b - 1.96 * se,
ub = res_b + 1.96 * se
)
beta <- c(ev$res_b[1:3],ev$res_b[5] )
out.pre <- mean_coef_test(beta, V, subset= c(1:3))
pre.coef <- round(out.pre$estimate,3)
pre.se <- round(out.pre$se,3)
out.post <- mean_coef_test(beta, V, subset= c(4))
post.coef <- round(out.post$estimate,3)
post.se <- round(out.post$se,3)
pp2 <- list(
pre  = paste0(pre.coef, " (", pre.se, ")"),
post = paste0(post.coef, " (", post.se, ")")
)
# 7) annotation  text
ann <- paste0( " Mean DV = ",    round(y0,   3), "\n",
"Pre Avg =  ", pp2$pre,        "\n",
"Post Avg = ", pp2$post,       "\n"
)
out[['beta_rot']] <- beta
p2 <- ggplot(ev, aes(x = t, y = res_b)) +
# Ribbon for CI
geom_ribbon(aes(ymin = lb, ymax = ub), fill = "#279FF5", alpha = 0.2) +
# Line and points
geom_line(color = "#279FF5", linewidth = 0.8) +
geom_point(shape = 15, size = 2.2, color = "#279FF5") +
# Reference lines
geom_vline(xintercept = -1, linetype = "dashed", colour = "blue") +
geom_hline(yintercept = 0, linetype = "dashed", colour = "purple") +
# Labels and scales
labs(x = 'Election from Treatment', y = '') +
scale_x_continuous(breaks = seq(-8, 6, by = 1)) +
# Theme
theme(
panel.background  = element_rect(fill = "white", colour = NA),
plot.background   = element_rect(fill = "white", colour = NA),
panel.grid.minor  = element_blank(),
axis.line         = element_line(colour = "black"),
axis.line.x.top   = element_blank(),
axis.line.y.right = element_blank(),
panel.grid.major   = element_line(colour = "gray70", linetype = "dashed"),
legend.position   = "none"
) +
annotate("text",
x = -Inf, y = Inf,
hjust = -0.1, vjust = 1.1,
label = ann,
size  = 4)
save_path <- file.path(figure_farms, paste0(file_base, "_rotated.png"))
ggsave(save_path, plot = p2, width = 8, height = 4, dpi = 300)
}
